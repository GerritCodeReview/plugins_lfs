{
  "comments": [
    {
      "key": {
        "uuid": "239f651f_fcbfe96a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-11T12:02:59Z",
      "side": 1,
      "message": "This subject is misleading. The basic http auth is already automatically done when the servlet is accessed via the \"/a\" prefix.\n\nMy understanding is that this change only adds the missing authorization part.",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_7b3d1f2f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-11T12:02:59Z",
      "side": 1,
      "message": "Why not injecting just the CurrentUser here? Why do you need the LfsAuthUserProvider?",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_1bd09ba8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-01-11T13:40:58Z",
      "side": 1,
      "message": "It is not that easy :) Servlet is a singleton so I guess you meant Provider\u003cCurrentUser\u003e, but that doesn\u0027t work - AFAICT com.google.gerrit.httpd.GitOverHttpServlet registers itself on com.google.gerrit.httpd.GitOverHttpServlet.URL_REGEX which is different than LFS endpoint + operation hence it can\u0027t actively take part in user resolution...\nreason maybe different but it doesn\u0027t work :/",
      "parentUuid": "039c2129_7b3d1f2f",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_dbe9d367",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-11T13:57:47Z",
      "side": 1,
      "message": "Why should GitOverHttpServlet play any role here? Performing a git-over-http operation is served by the GitOverHttpServlet and if it needs a large object then it will send a (new) LFS protocol request to this servlet\nand we should be able to get the CurrentUser.\n\nWhat exactly doesn\u0027t work?\n\nI see that many plugins inject Provider\u003cCurrentUser\u003e and it works. Although, no one injects it in a Servlet... so maybe there is something weird in our Guice bindings which prevents that.\n\nHave you tried injecting the Provider\u003cCurrentUser\u003e into the LfsAuthUserProvider?",
      "parentUuid": "039c2129_1bd09ba8",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_3c28f1b2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-01-11T14:45:23Z",
      "side": 1,
      "message": "in terms of plugins you are right thanks for pointer, I will investigate it\n\nin terms of simply adding Provider\u003cCurrentUser\u003e to LfsAuthUserProvider it doesn\u0027t work even if LfsAuthUserProvider is created getLargeFileRepository function - it always receives AnonymousUser...",
      "parentUuid": "039c2129_dbe9d367",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43de192a_bd77df3a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T00:01:16Z",
      "side": 1,
      "message": "Why not just pass in the AuthInfo here and let the method extract the parts it needs?",
      "range": {
        "startLine": 80,
        "startChar": 39,
        "endLine": 80,
        "endChar": 57
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43de192a_9d7a2324",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T00:01:16Z",
      "side": 1,
      "message": "I think an if-statement would be more readable for these checks.",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 124,
        "endChar": 10
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23e765fc_1c8e1518",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T02:20:41Z",
      "side": 1,
      "message": "Done",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 124,
        "endChar": 10
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43de192a_7d763743",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T00:01:16Z",
      "side": 1,
      "message": "make this a constant too; it\u0027ll make migration a bit easier once we expose these constants from JGit.",
      "range": {
        "startLine": 125,
        "startChar": 12,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23e765fc_fc8169e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T02:20:41Z",
      "side": 1,
      "message": "Done.  See also: https://git.eclipse.org/r/#/c/88606/",
      "range": {
        "startLine": 125,
        "startChar": 12,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_bcc96109",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-11T12:02:59Z",
      "side": 1,
      "message": "Yes, this is the minimum we can check.\n\nHowever, here you don\u0027t check if the request large OID is actually used in this project. An evil user could request download of a large object X \n(which is used inside project N which is non-readable for the user)\nvia a project P which is readable for that user and in that way gain access to the object X. Right?",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_bb22c705",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-01-11T12:36:08Z",
      "side": 1,
      "message": "I will work on the other issues but have no quick solution to check if OID belongs to the repository - do you have sth specific in mind?",
      "parentUuid": "239f651f_bcc96109",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_1bb97b8a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-11T12:49:37Z",
      "side": 1,
      "message": "No... because we don\u0027t yet have an efficient way to check if an OID is reachable from a branch or, at least, used in a project. This is probably a first very concrete use-case which shows need for an index which can efficiently check if an OID is reachable from a commit.",
      "parentUuid": "039c2129_bb22c705",
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23e765fc_bc77e13a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T00:01:16Z",
      "side": 1,
      "message": "Note: Although we have a specific exception class here, this will be interpreted as the base LfsException in JGit\u0027s LfsProtocolServlet, which will then be returned to the client as HTTP 500 internal server error.\n\nI don\u0027t think there\u0027s much we can do about it now, though.  We probably can\u0027t add it upstream on the stable branch.",
      "range": {
        "startLine": 138,
        "startChar": 14,
        "endLine": 138,
        "endChar": 29
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43de192a_fd8167e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-01-13T02:20:41Z",
      "side": 1,
      "message": "Added a new class upstream:\n\nhttps://git.eclipse.org/r/#/c/88603/\n\nwhich we can use once we\u0027re on master with a newer JGit.",
      "range": {
        "startLine": 138,
        "startChar": 14,
        "endLine": 138,
        "endChar": 29
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_1c717549",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsAuthUserProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-01-10T22:50:52Z",
      "side": 1,
      "message": "should really check the password before letting in as otherwise it is a matter of username that exists and has sufficient credentials ;)\n\non the other hand it seems though Git LFS client doesn\u0027t send pass in plain HTTP - have to investigate that more...",
      "range": {
        "startLine": 58,
        "startChar": 6,
        "endLine": 64,
        "endChar": 7
      },
      "revId": "f229d26a88fabe95e9fd0d916c348bf36949a11e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
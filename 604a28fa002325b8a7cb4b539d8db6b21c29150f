{
  "comments": [
    {
      "key": {
        "uuid": "98c035e4_8b332aa1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/locks/LfsLocksHandler.java",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-05-17T12:09:00Z",
      "side": 1,
      "message": "Optional:\n\nCould we use Project.NameKey here?",
      "range": {
        "startLine": 72,
        "startChar": 32,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "604a28fa002325b8a7cb4b539d8db6b21c29150f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be1092a3_0f114bde",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/locks/LfsLocksHandler.java",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-05-17T13:41:00Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "98c035e4_8b332aa1",
      "range": {
        "startLine": 72,
        "startChar": 32,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "604a28fa002325b8a7cb4b539d8db6b21c29150f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8604de19_90a56f97",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/locks/LfsLocksHandler.java",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-05-17T12:09:00Z",
      "side": 1,
      "message": "Can we rely on the presence of an element in a guava cache?\n\nGuava cache will remove LRU elements when the cache approaches its full capacity. Even if a lock was put into the cache it may not exist when this code checks for it.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 5
      },
      "revId": "604a28fa002325b8a7cb4b539d8db6b21c29150f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "284eac7d_7ce9e32a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/locks/LfsLocksHandler.java",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-05-17T13:41:00Z",
      "side": 1,
      "message": "When there is parameterless newBuilder() used for cache creation there is no automatic eviction of any type enforced - do you thing that there should be? I have decided to use cache of caches so that:\n1. entries on first level are created only when needed (LFS is enabled for project)\n2. caches are per project - they are smaller in size and I can imagine that they will not grow indefinitely as locking is manual operation called by user...\n\nwe can revisit that in the follow up change if you have some scenario in mind ;)",
      "parentUuid": "8604de19_90a56f97",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 5
      },
      "revId": "604a28fa002325b8a7cb4b539d8db6b21c29150f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
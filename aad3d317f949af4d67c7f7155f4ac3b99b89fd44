{
  "comments": [
    {
      "key": {
        "uuid": "c59e7e21_5ca13d8f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-08-25T08:33:29Z",
      "side": 1,
      "message": "Effectively, this means that project owners can only decrease the maxObjectSize for their project. Is it worth the (implementation) effort? Will it be used at all? Should we drop this feature?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "683927b8_69c60547",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-25T08:41:08Z",
      "side": 1,
      "message": "I\u0027d be OK with dropping it.",
      "parentUuid": "c59e7e21_5ca13d8f",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c59e7e21_fcba89ac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2016-08-25T11:33:34Z",
      "side": 1,
      "message": "Does the same applies to lfs.enabled? What I mean is that if we get rid off overridden functionality we are loosing flexibility of setting for instance which repository supports LFS. I can imagine that one enables it for whole site but would like to exclude it from particular repositories in the site. What is actually wrong leaving it as it is derived and possible to setup on project level? Similar functionality is for Maximum Object size limit and user is entitled to change it on project level and it works fine... yet without derrive which is nice improvement in my opinion ;)",
      "parentUuid": "683927b8_69c60547",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2861efbb_97f1a498",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-08-25T11:52:45Z",
      "side": 1,
      "message": "\u003e Does the same applies to lfs.enabled? What I mean is that if we get\n \u003e rid off overridden functionality we are loosing flexibility of\n \u003e setting for instance which repository supports LFS.\n\nThis is done in the All-Projects\u0027 lfs.config as shown in the example above (line 19).\n\n\u003e I can imagine\n \u003e that one enables it for whole site but would like to exclude it\n \u003e from particular repositories in the site.\n\nThis is possible. To switch off LFS for project X and enable for all other projects admins would write:\n\n  [lfs \"X\"]\n    enabled \u003d false\n  [lfs \"*\"]\n    enabled \u003d true\n\n\u003e What is actually wrong\n \u003e leaving it as it is derived and possible to setup on project level?\n\nIt is possible to setup LFS per-project, just that it is done by admins in All-Projects:lfs.config instead by project owners.\n\n \u003e Similar functionality is for Maximum Object size limit and user is\n \u003e entitled to change it on project level and it works fine...\n\nIt is only possible to decrease it on project level and I don\u0027t know anyone actually decreasing it.\n\n\u003e yet\n \u003e without derrive which is nice improvement in my opinion ;)",
      "parentUuid": "c59e7e21_fcba89ac",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2861efbb_77ddf006",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2016-08-25T13:16:39Z",
      "side": 1,
      "message": "But looking into LfsConfig if I am not mistaken ;) I can see that order in config file matters lfs.\"project\" has to be configured before lfs.\"*\" is it intentional?",
      "parentUuid": "2861efbb_97f1a498",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c59e7e21_3cf23199",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2016-08-25T13:27:37Z",
      "side": 1,
      "message": "I agree that further restriction happens rarely or never in terms of file size ;) but LFS enabled should be decision that is taken on project level too which leads to situation that given parameter could be set up in two different places and will have to investigate what is where... isn\u0027t it going to be to complicated?",
      "parentUuid": "2861efbb_77ddf006",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c59e7e21_9caee579",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-08-25T08:33:29Z",
      "side": 1,
      "message": "When config \u003d\u003d null this will jump directly to the line 109 and return a (non-null) repository instance. Instead we must return null in such a case.",
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "683927b8_89f17998",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsApiServlet.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-25T08:41:08Z",
      "side": 1,
      "message": "Right.  I was forgetting that the default for enabled is false.\n\nI\u0027ll fix this.",
      "parentUuid": "c59e7e21_9caee579",
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2861efbb_37b1b8d9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsConfigSection.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-08-25T08:33:29Z",
      "side": 1,
      "message": "Why does it need to be Boolean (object)?",
      "range": {
        "startLine": 52,
        "startChar": 9,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c59e7e21_3ca0f188",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsConfigSection.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-08-25T08:33:29Z",
      "side": 1,
      "message": "isEnabled",
      "range": {
        "startLine": 52,
        "startChar": 17,
        "endLine": 52,
        "endChar": 27
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05997637_feb121da",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/LfsConfigSection.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-25T08:41:08Z",
      "side": 1,
      "message": "\u003e Why does it need to be Boolean (object)?\n\nActually it doesn\u0027t need to return a boxed type, and nor does getMaxObjectSize, since both always return an actual value.\n\nThe use of boxed types is copied over from the implementations in the quota plugin, which can return null.  I removed the \"nullness\" here, but didn\u0027t change the types.",
      "parentUuid": "2861efbb_37b1b8d9",
      "range": {
        "startLine": 52,
        "startChar": 9,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2861efbb_37bc58a9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/Namespace.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2016-08-25T11:33:34Z",
      "side": 1,
      "message": "nit:2014",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "683927b8_a921dd08",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/Namespace.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-25T12:49:02Z",
      "side": 1,
      "message": "The date is intentional.  This file is copied verbatim from the quota plugin.",
      "parentUuid": "2861efbb_37bc58a9",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "683927b8_c926111e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfs/Namespace.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-25T12:49:02Z",
      "side": 1,
      "message": "This should give a warning about unnecessary nesting of else statement...",
      "range": {
        "startLine": 38,
        "startChar": 6,
        "endLine": 40,
        "endChar": 5
      },
      "revId": "aad3d317f949af4d67c7f7155f4ac3b99b89fd44",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}